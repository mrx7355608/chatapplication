generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// ===============
//      USER
// ===============
model User {
    id                   String   @id @default(auto()) @map("_id") @db.ObjectId
    clerk_id             String
    username             String
    fullname             String
    image                String
    my_friends_ids       String[] @default([]) @db.ObjectId
    iam_friends_with_ids String[] @default([]) @db.ObjectId
    conversation_ids     String[] @default([]) @db.ObjectId

    // Prisma underlying tables stuff
    my_friends                User[]           @relation("Friends", fields: [my_friends_ids], references: [id])
    iam_friends_with          User[]           @relation("Friends", fields: [iam_friends_with_ids], references: [id])
    friendRequestsSent        FriendRequests[] @relation("RequestSent")
    friendRequestsReceived    FriendRequests[] @relation("RequestReceived")
    SentMessages              Message[]
    as_sender_conversations   Conversation[]   @relation("Sender")
    as_receiver_conversations Conversation[]   @relation("Receiver")
}

// =========================
//      FRIEND REQUESTS
// =========================
model FriendRequests {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    sent_by_id String   @db.ObjectId
    sent_to_id String   @db.ObjectId
    sent_by    User     @relation("RequestSent", fields: [sent_by_id], references: [id])
    sent_to    User     @relation("RequestReceived", fields: [sent_to_id], references: [id])
    timestamp  DateTime @default(now())

    @@map("PendingRequests")
}

// =========================
//      CONVERSATIONS
// =========================
model Conversation {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    user1_id String @db.ObjectId
    user2_id String @db.ObjectId
    user1    User   @relation("Sender", fields: [user1_id], references: [id])
    user2    User   @relation("Receiver", fields: [user2_id], references: [id])

    messages Message[]
}

// =====================
//      MESSAGES
// =====================
model Message {
    id              String   @id @default(auto()) @map("_id") @db.ObjectId
    sender_id       String   @db.ObjectId
    conversation_id String   @db.ObjectId
    text            String
    timestamp       DateTime

    sender       User         @relation(fields: [sender_id], references: [id])
    conversation Conversation @relation(fields: [conversation_id], references: [id])
}

// =====================
//      FCM TOKENS
// =====================
model FcmToken {
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    user_clerk_id String
    token         String @unique()
}
